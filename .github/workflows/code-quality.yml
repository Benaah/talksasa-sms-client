name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run ESLint
      run: npm run lint
    
    - name: Run TypeScript type checking
      run: npx tsc --noEmit
    
    - name: Check code formatting
      run: |
        echo "Checking if code is properly formatted..."
        npm run lint -- --format=json > lint-results.json || true
        if [ -s lint-results.json ]; then
          echo "Code formatting issues found:"
          cat lint-results.json | jq '.[] | select(.errorCount > 0) | .filePath' || true
          exit 1
        else
          echo "Code formatting is correct"
        fi
    
    - name: Security scan with CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: javascript
        queries: security-and-quality
    
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
    
    - name: Check for security vulnerabilities
      run: |
        echo "Running security audit..."
        npm audit --audit-level=moderate || true
        
        echo "Checking for known security issues..."
        npx audit-ci --config audit-ci.json || true
    
    - name: Check package.json integrity
      run: |
        echo "Validating package.json..."
        npm pack --dry-run
        
        echo "Checking for required fields..."
        node -e "
          const pkg = require('./package.json');
          const required = ['name', 'version', 'description', 'main', 'types', 'author', 'license'];
          const missing = required.filter(field => !pkg[field]);
          if (missing.length > 0) {
            console.error('Missing required fields:', missing);
            process.exit(1);
          }
          console.log('All required fields present');
        "
    
    - name: Validate TypeScript configuration
      run: |
        echo "Validating TypeScript configuration..."
        npx tsc --showConfig > tsconfig-output.json
        echo "TypeScript configuration is valid"
    
    - name: Check build output
      run: |
        echo "Building package..."
        npm run build
        
        echo "Validating build output..."
        if [ ! -d "dist" ]; then
          echo "Build output directory 'dist' not found"
          exit 1
        fi
        
        if [ ! -f "dist/index.js" ]; then
          echo "Main entry point 'dist/index.js' not found"
          exit 1
        fi
        
        if [ ! -f "dist/index.d.ts" ]; then
          echo "Type definitions 'dist/index.d.ts' not found"
          exit 1
        fi
        
        echo "Build output is valid"
    
    - name: Test package loading
      run: |
        echo "Testing package loading..."
        node -e "
          try {
            const pkg = require('./dist/index.js');
            console.log('Package loads successfully');
            console.log('Available exports:', Object.keys(pkg));
          } catch (error) {
            console.error('Package loading failed:', error.message);
            process.exit(1);
          }
        "
