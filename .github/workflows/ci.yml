name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  release:
    types: [ published ]

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 21.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm run security:audit
    
    - name: Run linting
      run: npm run lint
    
    - name: Run tests
      run: npm test
      env:
        CI: true
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: matrix.node-version == '20.x'
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build package
      run: npm run build
    
    - name: Verify build output
      run: |
        echo "Checking dist folder contents:"
        ls -la dist/
        echo "Checking main entry point:"
        node -e "const pkg = require('./dist/index.js'); console.log('Package loads successfully');"
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-files
        path: dist/
        retention-days: 30

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --audit-level=moderate
    
    - name: Run security check
      run: npm run security:check
    
    - name: Check for known vulnerabilities
      run: |
        npx audit-ci --config audit-ci.json || true

  publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: [test, build, security]
    if: github.event_name == 'release' && github.event.action == 'published'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build package
      run: npm run build
    
    - name: Publish to NPM
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.release.tag_name }}
        release_name: ${{ github.event.release.name }}
        body: |
          ## TalkSASA SMS Client ${{ github.event.release.tag_name }}
          
          ### New Features
          - Full SMS, Voice, MMS, WhatsApp messaging support
          - Contact & Contact Groups management
          - Template management with DLT support
          - OAuth 2.0 authentication
          - Enterprise-level security features
          
          ### Installation
          ```bash
          npm install talksasa-sms-client
          ```
          
          ### Documentation
          - [README](https://github.com/Benaah/talksasa-sms-client#readme)
          - [API Documentation](https://github.com/Benaah/talksasa-sms-client#api-reference)
          - [Security Policy](https://github.com/Benaah/talksasa-sms-client/blob/main/SECURITY.md)
          
          ### Security
          This release includes comprehensive security features:
          - Input validation & sanitization
          - Rate limiting protection
          - XSS, SQL injection, command injection protection
          - Secure error handling
        draft: false
        prerelease: false
